<?php
// $Id$

/**
 * This module provides mail merge functionality for the Conference pack.
 *
 * So maybe we need a node type with some additional storage:
 *   - Status (sent/draft)
 *   - Filter
 *   - Priority
 *
 * That requires a nodeapi handler to populate the right fields on load
 * and (I guess) one that can send mails on save.
 *
 * Included filters:
 *   - Role
 *   - Product
 *   - Payment status
 *
 * When a mail is sent, a log entry is written which includes the mail content.
 * Past communication can thus be easily retrieved.
 */

/**
 * Implementation of hook_perm().
 */
function mailmerge_perm() {
  return array('administer mailmerge', 'perform mailmerge');
}

/**
 * Implementation of hook_nodeapi()
 */
function mailmerge_nodeapi(&$node, $op, $teaser, $page) {
  global $user;

  // Operate only on node types set in 'simplenews_content_types' variable.
  if (!in_array($node->type, variable_get('mailmerge_content_types', array('mailmerge')))) {
    return;
  }

  switch ($op) {
    case 'alter':
      // used by token.
      break;

    case 'load':
      $node->mailmerge = db_fetch_array(db_query('SELECT * FROM {mailmerge_formletters} WHERE nid = %d', $node->nid));
      break;
  }
}

/**
 * Form for mail entry - node/add form. Must add filters, though. Pull-down with #ahah
 * call that lists how many users would be mailed would be nice.
 */
function mailmerge_form_alter($form_id, &$form, $form_state) {
  // Insert filters.
  $form['filters'] = array(
    '#title' => 'Filters',
    '#description' => 'Select one or more filters to limit the users this mailmerge is sent to.',
  );
  $form['filters']['roles'] = array(
    '#title' => 'Roles',
    '#type' => 'select',
    '#values' => user_roles(),
  );
  // products
  // payments
}


/**
 * Verification prompt.
 */


/**
 * Mail handler.
 */


/**
 * Write log.
 */


/**
 * Show log list.
 */


/**
 * Show log entry.
 */
