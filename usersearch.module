<?php

/**
 * Implementation of hook_menu()
 */
function usersearch_menu() {
  $items['admin/user/user/search'] = array(
    'title' => 'Search users and profiles',
    'description' => 'Search users',
    'page callback' => 'usersearch_search',
    'access arguments' => array('administer users'),
    'type' => MENU_LOCAL_TASK,
  );

  return $items;
}

/**
 * User search form render helper.
 */
function usersearch_search() {
  return drupal_get_form('usersearch_search_form');
}

/**
 * Helper for custom user search.
 */
function usersearch_search_fields($keys_only = FALSE) {
  $query = "SELECT cnf.field_name, cnfi.label FROM {content_node_field} AS cnf LEFT JOIN {content_node_field_instance} AS cnfi USING(field_name) WHERE cnf.field_name LIKE 'field_profile_%' AND cnf.type='text' ORDER BY cnfi.weight ASC";
  $result = db_query($query);
  $fields = array();
  while ($object = db_fetch_object($result)) {
    if ($keys_only)
      $fields[] = $object->field_name;
    else
      $fields[$object->field_name] = $object->label;
  }
  return $fields;
}

/**
 * Custom user search.
 */
function usersearch_search_form($form_state) {

  $form['#redirect'] = FALSE;

  $form['proposal_list_users']['string'] = array(
    '#type' => 'textfield',
    '#title' => 'Search',
    '#description' => 'Enter arbitrary text to search for.',
    '#default_value' => $form_state['values']['string'],
  );
  $form['proposal_list_users']['filters'] = array(
    '#type' => 'fieldset',
    '#title' => 'Filters',
    '#description' => '',
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
  );
  $form['proposal_list_users']['filters']['fields'] = array(
    '#type' => 'checkboxes',
    '#title' => 'Search fields',
    '#description' => 'Check all the fields that you wish to search. The email address field is always searched.',
    '#options' => usersearch_search_fields(),
    '#default_value' => usersearch_search_defaults($form_state, 'fields'),
  );
  $form['proposal_list_users']['filters']['roles'] = array(
    '#type' => 'checkboxes',
    '#title' => 'User roles',
    '#description' => 'Check any roles you wish to limit results by.',
    '#options' => user_roles(TRUE),
    '#default_value' => usersearch_search_defaults($form_state, 'roles'),
  );

  if ($form_state['submitted'] == TRUE) {
    $form['proposal_list_users']['result'] = array(
      '#type' => 'markup',
      '#value' => usersearch_search_form_process($form_state),
    );
  }

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('List Users'),
  );

  return $form;
}

/**
 * Helper to regenerate selections for the form.
 */
function usersearch_search_defaults($data, $field) {
  $ret = array();
  foreach ($data['values'][$field] as $key => $val) {
    if ($val) {
      $ret[] = $val;
    }
  }

  // For fields, default to name and organisation.
  if ($field == 'fields' && !count($ret)) {
    $ret = array('field_profile_firstname', 'field_profile_surname', 'field_profile_organisation');
  }

  return $ret;
}

/**
 * Rebuild the form on submission.
 */
function usersearch_search_form_submit($form, &$form_state) {
  $form_state['rebuild'] = TRUE;
}

/*(
 * Do the actual work, then retyurn a themed string.
 */
function usersearch_search_form_process($form_state) {

  // Parse fields.
  $fields = array();
  foreach ($form_state['values']['fields'] as $key => $val) {
    if ($val) {
      $fields[] = $key;
    }
  }

  // Parse roles.
  $roles = array();
  foreach ($form_state['values']['roles'] as $key => $val) {
    if ($val) {
      $roles[] = $key;
    }
  }

  // Only retrieve checked fields.
  // $query = "SELECT n.uid, u.mail, ctp." . implode('_value, ctp.', proposal_list_users_fields(TRUE) ) . "_value FROM {content_type_profile} AS ctp LEFT JOIN {node} AS n ON(ctp.nid=n.nid) LEFT JOIN {users} AS u ON(n.uid=u.uid) LEFT JOIN {users_roles} AS ur ON(u.uid=ur.uid) WHERE u.mail LIKE '%%%s%%'";
  $query = "SELECT DISTINCT(n.uid), u.mail, ctp." . implode('_value, ctp.', $fields) . "_value FROM {content_type_profile} AS ctp LEFT JOIN {node} AS n ON(ctp.nid=n.nid) LEFT JOIN {users} AS u ON(n.uid=u.uid) LEFT JOIN {users_roles} AS ur ON(u.uid=ur.uid) WHERE (u.mail LIKE '%%%s%%'";
  $args = array($form_state['values']['string']);

  // foreach $field add an OR.
  foreach ($fields as $f) {
    $query .= " OR ctp." . $f . "_value LIKE '%%%s%%'";
    $args[] = $form_state['values']['string'];
  }

  if (count($roles)) {
    $query .= ') AND ur.rid IN(' . implode(',', $roles) . ')';
  } else {
    $query .= ')';
  }
  $result = db_query($query, $args);

  $data = array();
  while ($row = db_fetch_array($result)) {
    $row['mail'] = l($row['mail'], 'user/' . $row['uid']);
    $data[] = $row;
  }

  // Make a pretty table header.
  $header = array('ID', 'Email');
  $all_fields = usersearch_search_fields();
  foreach ($fields as $f) {
    $header[] = $all_fields[$f];
  }

  return theme('table', $header, $data);
}
