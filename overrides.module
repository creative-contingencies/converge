<?php

/**
 * Form alter overrides for the conference system.
 */
function overrides_form_alter(&$form, $form_state, $form_id) {

  // Because we login via the email address only, hide the username field
  // on the signup form and do a pre-validate call so we can transpose the
  // email address into the name field.
  if($form_id == 'user_register') {
    $form['name']['#type'] = 'hidden';
    unset($form['name']['#required']);
    array_unshift($form['#validate'], 'overrides_user_register_validate');
  }

  // Turn the cheque description into a 4-line field with preset labels.
  //
  if($form_id == 'uc_payment_pack_receive_check_form') {
    $form['comment']['#type'] = 'textarea';
    $form['comment']['#rows'] = 4;
    $form['comment']['#cols'] = 64;
    $form['comment']['#default_value'] = "Cheque No: \nDrawer: \nBank: \nBranch: ";
    $form['comment']['#description'] = "Enter all required cheque details such as the number, drawer and bank information on the appropriate line.";
  }

  // Resize the dietary / mobility needs fields on the profile.
  if($form_id == 'profile_node_form') {
    $form['field_profile_dietary']['#cols'] = 12;
    $form['field_profile_dietary']['#rows'] = 2;

    $form['field_profile_mobility']['#cols'] = 12;
    $form['field_profile_mobility']['#rows'] = 2;
  }

  if(strpos($form_id, 'uc_product_add_to_cart_form') !== FALSE) {
    $form['continue_shopping'] = array(
      '#type' => 'submit',
      '#value' => variable_get('register_continue_shopping', 'Continue shopping'),
    );
    array_unshift($form['#validate'], 'overrides_uc_product_add_to_cart_form_validate');
  }

  if ($form_id == 'uc_order_view_update_form') {
    dpm($form);
  }

  if ($form_id == 'profile_node_form') {
    $form['taxonomy'][4]['#title'] = 'Your Interests';
    $form['taxonomy'][4]['#description'] = 'Please tell us which topic areas are of interest to you. We can use this information to suggest sessions you may want to attend.';
    // dpm($form);
  }
}

/**
 * User signup form validation function override.
 *
 * Because the username was blank, transpsoe the email address into the username field.
 */
function overrides_user_register_validate($form, &$form_state) {
  $form_state['values']['name'] = $form_state['values']['mail'];
  $form_state['clicked_button']['#post']['name'] = $form_state['values']['mail'];
}

/**
 * Handle a user clicking 'Continue shopping' on a product page.
 */
function overrides_uc_product_add_to_cart_form_validate($form, &$form_state) {
  if($form_state['values']['op'] == variable_get('register_continue_shopping', 'Continue shopping')) {
    drupal_goto('register');
  }
}

/**
 * Remove history section from the user profile.
 */
function overrides_user($type, &$edit, &$account, $category = NULL) {
  // remove history and orders from user profile view
  if ($type == 'view') {
    unset($account->content['summary']);
    unset($account->content['orders']);
  }
}

/**
 * Return a user's full name, titlecased.
 */
function overrides_fullname($uid) {
  $profile = content_profile_load('profile', $uid);
  return ccc_strtot($profile->field_profile_firstname[0]['value'] . ' ' . $profile->field_profile_surname[0]['value']);
}

/**
 * Titlecase function.
 */
function ccc_strtot($s, $only_if_single_case = FALSE) {
  $smallwordsarray = array( 'of','a','the','and','an','or','nor','but','is','if','then','else','when', 'at','from','by','on','off','for','in','out','over','to','into','with' );

  if($only_if_single_case) {
    if(strtolower($s) != $s && strtoupper($s) != $s)
      return $s;
  }

  $words = explode(' ', $s);

  foreach($words as $key => $word) {
    if (!$key || !in_array($word, $smallwordsarray))
      $words[$key] = ucwords($word);
  }
  return implode(' ', $words);
}


/**
 * Re-theme a link to a user so the email address is not truncated.
 */
function acec2010_username($object) {

  if ($object->uid && $object->name) {
    $name = $object->name;

    if (user_access('access user profiles')) {
      $output = l($name, 'user/'. $object->uid, array('title' => t('View user profile.')));
    }
    else {
      $output = check_plain($name);
    }
  }
  else if ($object->name) {
    // Sometimes modules display content composed by people who are
    // not registered members of the site (e.g. mailing list or news
    // aggregator modules). This clause enables modules to display
    // the true author of the content.
    if ($object->homepage) {
      $output = l($object->name, $object->homepage);
    }
    else {
      $output = check_plain($object->name);
    }

    $output .= ' ('. t('not verified') .')';
  }
  else {
    $output = variable_get('anonymous', t('Anonymous'));
  }

  return $output;
}

